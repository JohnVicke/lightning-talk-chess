---
import Layout from "layouts/Layout.astro";
import { Image } from "astro:assets";
import { getPlaylistById } from "lib/spotify/playlist-by-id";

export const prerender = false;

const { session } = Astro.locals;

if (!session) {
  return Astro.redirect("/signin");
}

const { id } = Astro.params;

if (!id) {
  return Astro.redirect("/404");
}

const playlist = await getPlaylistById({
  session,
  playlistId: id,
});

if (!playlist) {
  return Astro.redirect("/404");
}

const image = playlist.images?.at(0);
---

<Layout title={playlist.name}>
  <div class="flex flex-col gap-8 relative max-w-screen-lg mx-auto">
    <a href="/playlist" class="text-blue-500 hover:underline"
      >Back to playlists</a
    >
    <div class="mx-auto flex flex-col gap-8 items-center">
      {
        image && (
          <Image
            class="rounded-xl"
            transition:name={`${playlist.name}-image`}
            src={image.url}
            alt={playlist.name}
            width={300}
            height={300}
          />
        )
      }
      <div
        class="flex flex-col gap-2 items-center"
        transition:name={`${playlist.name}-name`}
      >
        <h3 class="text-4xl font-bold">{playlist.name}</h3>
        <p>
          {
            playlist.owner?.display_name ??
              playlist.owner?.name ??
              playlist.owner?.id
          }
        </p>
      </div>
    </div>
    <div class="flex flex-col gap-y-4 w-full">
      {
        playlist.tracks.items.map(({ track }, index) => {
          const image = track?.album?.images.at(0)?.url;
          if (!image) return null;
          return (
            <div class="flex gap-4 max-w-full overflow-hidden">
              {image && (
                <Image
                  class="rounded-lg"
                  src={image}
                  width={64}
                  height={64}
                  alt={track.name}
                />
              )}
              <div class="flex flex-col gap-2">
                <h4 class="overflow-hidden whitespace-nowrap">{track.name}</h4>
                <p class="truncate">
                  {track.artists.map((artist) => artist.name).join(", ")}
                </p>
              </div>
            </div>
          );
        })
      }
    </div>
  </div>
  {
    image && (
      <Image
        class="absolute -z-10 inset-0 mix-blend-overlay opacity-20 w-full h-full object-cover blur-md rounded-xl bg-gradient-to-b"
        src={image.url}
        alt={playlist.name}
        width={1000}
        height={2000}
      />
    )
  }
</Layout>
